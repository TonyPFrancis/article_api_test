version: 2.1
jobs:
  build_test:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout  # checkout source code to working directory
      - run:
          # run pytest
          name: pytest
          command: |  
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements_dev.txt
            python3 -m pytest tests/
      - run:
          # build package
          name: build module
          command: |
            . venv/bin/activate
            python3 setup.py sdist bdist_wheel
            ls
      - run:
          # test package
          name: test module
          command: |
            . venv/bin/activate
            pip install dist/article_api_test-1.0.0-py3-none-any.whl
#            article-api --url "https://www.bbc.com/news/science-environment-61383391"

#  test_pypi_publish:
#    docker:
#      - image: circleci/python:3.8
#    steps:
#      - checkout  # checkout source code to working directory
#      - run:
#          command: |  # create whl, install twine and publish to Test PyPI
#            python setup.py sdist bdist_wheel
#            sudo pip install pipenv
#            pipenv install twine
#            pipenv run twine upload --repository testpypi dist/*
  pypi_publish:
    docker:
      - image: circleci/python:3.8
    steps:
      - run:
          name: publish to internal pypi
          command: |
            set -x
            aws s3 sync dist/ s3://pkgrepo.scrapinghub.com/python/packages/
#            tags=$(git tag -l --points-at $CIRCLE_SHA1 | { grep -E "[0-9]+\.[0-9]+\.[0-9]+(\..+)?" || true; })
#            for tag in $tags; do
#              sed -i -Ee "s/^__version__ = \"(.*)\"/__version__ = \"${tag}\"/" autocrawl/__version__.py
#              sudo python setup.py sdist bdist_wheel
#              aws s3 sync dist/ s3://pkgrepo.scrapinghub.com/python/packages/
#            done
#    steps:
#      - checkout  # checkout source code to working directory
#      - run:
#          command: |  # create whl, install twine and publish to PyPI
#            python setup.py sdist bdist_wheel
#            sudo pip install pipenv
#            pipenv install twine
#            pipenv run twine upload dist/*
workflows:
  build_test_publish:
    jobs:
      - build_test
#      - test_pypi_publish:
#          requires:
#            - build_test
#          filters:
#            branches:
#              only:
#                - develop
#      - pypi_publish:
#          requires:
#            - build_test
#          filters:
#            branches:
#              only:
#                - main
